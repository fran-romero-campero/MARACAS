#! /bin/bash

## Authors: Francisco J. Romero-Campero
##          Ana Belen Romero-Losada
## Contact: Francisco J. Romero-Campero - fran@us.es

## Load parameters from file

## Input file name
PARAMS=$1

echo ""
echo ""
echo "                              ^^^^^^^^^^^                           "
echo "                             &&&.=====.&&&                          "
echo "                            &&&&  6  6 &&&&                         "
echo "                           &&&&         &&&&                        "
echo "                           &&&&\  \__/ /&&&&                        "
echo "                                \_____/                             "
echo "            _____________OOOO_____|_|___________________________    "
echo "           /                                                    \   "
echo "           |             WELCOME TO OUR TOOL                    |   "
echo "           | MARACAS (MicroAlgae RnA-seq and Chip-seq AnalysiS) |   "
echo "           |     This is the RNA-seq Data Analysis Pipeline     |   "
echo "           |    Specifically Design to Support the Microalgae   |   "
echo "           |      Resarch Community to Exploit Omics Data       |   "
echo "           |                                                    |   "
echo "           |        Ubuntu means I am because we are            |   "
echo "           |           Nelson Mandela (1918 - 2013)             |   "
echo "           \_______________________________OOOO_________________/   "
echo "                              /    |    \                           "
echo "                              |    |    |                           "
echo "                              /    |    \                           "
echo "                             /     |     \                          "
echo "                             |_____|_____|                          "
echo "                                /  X  \                             "
echo "                               (__/ \__)                            "
echo ""
echo ""

#sleep 10s

if [ $# -ne 1 ];
then
   echo "Error: Wrong number of parameters."
   echo ""
   echo ""
   echo "Usage: rnaseq_pipeline <param_file>"
   echo ""
   echo "param_file: A file specifying the parameters for the RNA-seq "
   echo "            Data Analysis Pipeline. The folder test contains "
   echo "            several examples such as ?????. Check "
   echo "            the README file for details on how to write the "
   echo "            paramater file."

   exit
fi


echo ""
echo "------------------------------------------------------"
echo "------------------------------------------------------"
echo "|| STEP 1: LOADING PARAMETERS FROM FILE " $PARAMS "   "
echo "------------------------------------------------------"
echo "------------------------------------------------------" 
echo ""

## Load installation directory
##INS_DIR=$(grep installation_directory: $PARAMS | awk '{ print $2 }')

## Load working directory
eval WD=$(grep working_directory: $PARAMS | awk '{ print $2 }')

## Load main folder
MAIN_FOLDER=$(grep main_folder: $PARAMS | awk '{ print $2 }')

## Load number of samples
NUM_SAMPLES=$(grep number_of_samples: $PARAMS | awk '{ print $2 }')

## Load microalgae
MICROALGAE=$(grep microalgae: $PARAMS | awk '{ print $2 }')

## Load DE analysis package option
DEANALYSIS=$(grep DEanalysis_package: $PARAMS | awk '{ print $2 }')

## Load read mapper
MAPPER=$(grep read_mapper: $PARAMS | awk '{ print $2 }')

if [ -z $MAPPER ] 
then
    	MAPPER="hisat2"
        echo "Ahora si es hisat2"
fi

if [ "$MAPPER" != "kallisto" ] && [ "$MAPPER" != "hisat2" ] && [ "$MAPPER" != "STAR" ]
then
 	echo ""
	echo "---------------------------------------------------"
	echo "Read mapper not supported by MARACAS. Please use"
	echo "hisat2, STAR or kallisto instead."
	echo "---------------------------------------------------"
	echo ""
fi
## Load data source
DATA=$(grep data_source: $PARAMS | awk '{print $2}')

## Load paired end data
PAIRED=$(grep paired_end: $PARAMS | awk '{print $2}')

## Load accession numbers for each sample o file location depending on data source
if [ $DATA == "DB" ]
then
	ACC_SAMPLES=()
	for i in `seq 0 $((${NUM_SAMPLES} - 1))`
	do   
   	ACC_SAMPLES[$i]=$(grep acc_sample$(($i +1)): $PARAMS | awk '{ print $2 }')
	done
elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
then
	LOC_SAMPLES=()
	for i in `seq 0 $((${NUM_SAMPLES} - 1))`
	do   
   	eval LOC_SAMPLES[$i]=$(grep loc_sample$(($i +1)): $PARAMS | awk '{ print $2 }')
		ACC_SAMPLES[$i]=sample$(($i+1))
	done
elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
then
	LOC_SAMPLES_LEFT=()
	LOC_SAMPLES_RIGHT=()
	for i in `seq 0 $((${NUM_SAMPLES} - 1))`
	do   
   	LOC_SAMPLES_LEFT[$i]=$(grep loc_sample_left$(($i +1)): $PARAMS | awk '{ print $2 }')
   	LOC_SAMPLES_RIGHT[$i]=$(grep loc_sample_right$(($i +1)): $PARAMS | awk '{ print $2 }')
		ACC_SAMPLES[$i]=sample$(($i+1))
	done
fi

## Load control condition name
CONTROL_COND=$(grep control_condition_name: $PARAMS | awk '{ print $2 }')
## Load experimental condition name
EXPERIMENTAL_COND=$(grep experimental_condition_name: $PARAMS | awk '{ print $2 }')
## Load experimental design consisting of sample conditions
EXPERIMENTAL_DESIGN=()
for i in `seq 0 $((${NUM_SAMPLES} - 1))`
do
   EXPERIMENTAL_DESIGN[$i]=$(grep condition_sample$(($i + 1)): $PARAMS | awk '{ print $2 }')
done 
## Load parameters for differential analysis
FOLD_CHANGE=$(grep fold_change: $PARAMS | awk '{ print $2 }')
Q_VALUE=$(grep q_value: $PARAMS | awk '{ print $2 }')

## Load parameter to indicate if the pipeline is going to be run on a cluster or single computer
ARCH=$(grep cluster: $PARAMS | awk '{ print $2}')

## Load parameter with the number of processors
NPROC=$(grep number_processors: $PARAMS | awk '{ print $2}')

echo ""
echo "---------------------------------------------------"
echo "The following parameters were loaded."
##echo " - Installation directory: " $INS_DIR
echo " - Working directory: " $WD
echo " - Main folder: " $MAIN_FOLDER
echo " - Microalgae: " $MICROALGAE
echo " - DE analysis package: " $DEANALYSIS
echo " - Read Mapper: " $MAPPER
echo " - Architecture where script will be run: " $ARCH
echo " - Number of processors: " $NPROC
echo " - Paired data: " $PAIRED

if [ $DATA == "DB" ]
then
	echo " - Sample accession numbers: " ${ACC_SAMPLES[@]}
else
	echo " - Sample locations: " ${LOC_SAMPLES_LEFT[@]}
        echo ${LOC_SAMPLES_RIGHT[@]}
fi


if [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
then
	echo " - Sample locations: " ${LOC_SAMPLES_LEFT[@]}
	echo ${LOC_SAMPLES_RIGHT[@]}
fi

echo " - Control condition name: " ${CONTROL_COND}
echo " - Experimental condition name: " ${EXPERIMENTAL_COND} 
echo " - Experimental design: " ${EXPERIMENTAL_DESIGN[@]}
echo "---------------------------------------------------"
echo ""


## Generating working directory.

echo ""
echo "------------------------------------------------------------"
echo "------------------------------------------------------------"
echo "|| STEP 2: GENERATION OF THE WORKING DIRECTORY ESTRUCTURE ||"
echo "------------------------------------------------------------"
echo "------------------------------------------------------------"
echo ""

## Access working directory
cd $WD

## Create and access main folder
mkdir ${MAIN_FOLDER}
cd ${MAIN_FOLDER}

## Create subfolders
mkdir samples results logs

## Create folder for each sample
cd samples

for i in `seq 1 ${NUM_SAMPLES}`
do
   mkdir sample_$i
done

## Create experimental design file
cd $WD/${MAIN_FOLDER}/samples

echo "sample,condition" > experimental_design.csv
for i in `seq 0 $((${NUM_SAMPLES} -1))`
do
   echo "sample"_$(($i + 1)),${EXPERIMENTAL_DESIGN[$i]} >> experimental_design.csv
done

echo "Working Directory Structure Generated!"
echo " "
if [ $ARCH == "SLURM" ]
then

   echo ""
   echo "----------------------------------------------------"
   echo "----------------------------------------------------"
   echo "|| STEP 3: PARALLEL SAMPLE PROCESSING USING SLURM ||"
   echo "----------------------------------------------------"
   echo "----------------------------------------------------"
   echo ""

   for  i in `seq 0 $((${NUM_SAMPLES} - 1))`
   do
      echo ""
      echo "*************************"
      echo "* Processing Sample " $(($i + 1)) 
      echo "*************************"
      echo ""

      cd $WD/${MAIN_FOLDER}/samples/sample_$(($i + 1))

      if [ $DATA == "DB" ] 
      then
         sbatch $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                          $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                          $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                          $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                          ${NUM_SAMPLES} \
                          $WD/${MAIN_FOLDER} \
                          ${CONTROL_COND} \
                          ${EXPERIMENTAL_COND} \
                          ${FOLD_CHANGE} \
                          ${Q_VALUE} \
                          ${ACC_SAMPLES[$i]} \
                          NULL \
                          $NPROC \
                          $ARCH \
                          $MICROALGAE \
                          $MAPPER
         #sleep 10m
      elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ] 
      then
         sbatch $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                          $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                          $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                          $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                          ${NUM_SAMPLES} \
                          $WD/${MAIN_FOLDER} \
                          ${CONTROL_COND} \
                          ${EXPERIMENTAL_COND} \
                          ${FOLD_CHANGE} \
                          ${Q_VALUE} \
                          ${LOC_SAMPLES[$i]} \
                          NULL \
                          $NPROC \
                          $ARCH \
                          $MICROALGAE \
                          $MAPPER
      elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
      then
         sbatch $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                          $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                          $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                          $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                          ${NUM_SAMPLES} \
                          $WD/${MAIN_FOLDER} \
                          ${CONTROL_COND} \
                          ${EXPERIMENTAL_COND} \
                          ${FOLD_CHANGE} \
                          ${Q_VALUE} \
                          ${LOC_SAMPLES_LEFT[$i]} \
                          ${LOC_SAMPLES_RIGHT[$i]} \
                          $NPROC \
                          $ARCH \
                          $MICROALGAE \
                          $MAPPER
      fi
   done

elif [ $ARCH == "SGE" ]
then

   ## Parallel sample processing
   echo "Parallel sample processing"
   for  i in `seq 0 $((${NUM_SAMPLES} - 1))`
      do
         if [ $DATA == "DB" ]
         then
            qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} $MARACAS/scripts/sample_processing.sge $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${ACC_SAMPLES[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
	    sleep 30m
         elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
         then
            qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} $MARACAS/scripts/sample_processing.sge $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
         then
            qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES_LEFT[$i]} \
                                             ${LOC_SAMPLES_RIGHT[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
	    sleep 30m
         fi

         echo "- Sample " $(($i + 1)) " processing submitted to queue"
   done

elif [ $ARCH == "SERVER" ]
then

   ## Sequential sample processing   
   echo ""
   echo "------------------------------------------"
   echo "------------------------------------------"
   echo "|| STEP 3: SEQUENTIAL SAMPLE PROCESSING ||"
   echo "------------------------------------------"
   echo "------------------------------------------"
   echo ""
   
   
   for  i in `seq 0 $((${NUM_SAMPLES} - 1))`
      do
      
         echo ""
         echo "*************************"
         echo "* PROCESSING SAMPLE " $(($i + 1)) 
         echo "*************************"
         echo ""
      
         if [ $DATA == "DB" ]
         then
            bash $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${ACC_SAMPLES[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
         then
            bash $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES[$i]} \
                                             NULL \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
         then
            bash $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES_LEFT[$i]} \
                                             ${LOC_SAMPLES_RIGHT[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         fi
   done

   if [ $MAPPER == "hisat2" -o  $MAPPER == "STAR" ]
   then	
         bash $MARACAS/scripts/transcriptome_merging.sh $WD/${MAIN_FOLDER} $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf
   fi
   
   echo ""
   echo "* Computing differential gene expression *" 
   echo "******************************************"
   echo ""
   
   Rscript $MARACAS/scripts/DE_analysis.R $WD/${MAIN_FOLDER}/samples ${CONTROL_COND} ${EXPERIMENTAL_COND} $FOLD_CHANGE $Q_VALUE $MICROALGAE $MAPPER $DEANALYSIS
   
   echo ""
   echo "* Generating output reports *" 
   echo "*****************************"
   echo ""
   Rscript -e "rmarkdown::render('$WD/${MAIN_FOLDER}/results/DE_report.Rmd', 'pdf_document')"
   Rscript -e "rmarkdown::render('$WD/${MAIN_FOLDER}/results/DE_report.Rmd', 'html_document')"
fi

echo ""
echo ""
echo "**************************************************************************************************************"
echo "*                                    ANALYSIS DONE!!!                                                        *"
echo "* OUTPUT REPORTS IN HTML AND PDF FORMATS HAVE BEEN GENERATED IN THE FOLDER $WD/${MAIN_FOLDER}/results"
echo "*                                  ENJOY YOUR RESULTS!!!                                                     *"
echo "**************************************************************************************************************"
echo ""
echo ""
echo ""
echo "                                    ░░░░░░░░░░░░░░░░░░░░░░█████████"
echo "                                    ░░███████░░░░░░░░░░███▒▒▒▒▒▒▒▒███"
echo "                                    ░░█▒▒▒▒▒▒█░░░░░░░███▒▒▒▒▒▒▒▒▒▒▒▒▒███"
echo "                                    ░░░█▒▒▒▒▒▒█░░░░██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░░░░█▒▒▒▒▒█░░░██▒▒▒▒▒██▒▒▒▒▒▒██▒▒▒▒▒███"
echo "                                    ░░░░░█▒▒▒█░░░█▒▒▒▒▒▒████▒▒▒▒████▒▒▒▒▒▒██"
echo "                                    ░░░█████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░░░█▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░██▒▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒██▒▒▒▒▒▒▒▒▒▒██▒▒▒▒██"
echo "                                    ██▒▒▒███████████▒▒▒▒▒██▒▒▒▒▒▒▒▒██▒▒▒▒▒██"
echo "                                    █▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒████████▒▒▒▒▒▒▒██"
echo "                                    ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░█▒▒▒███████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░██▒▒▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█"
echo "                                    ░░████████████░░░█████████████████"
echo ""
echo ""
echo ""
