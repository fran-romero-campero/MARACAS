#! /bin/bash

## Authors: Francisco J. Romero-Campero
##          Ana Belen Romero-Losada
## Contact: Francisco J. Romero-Campero - fran@us.es

## Load parameters from file

## Input file name
PARAMS=$1
FIRST_FOLDER=`pwd`

echo ""
echo ""
echo "                              ^^^^^^^^^^^                           "
echo "                             &&&.=====.&&&                          "
echo "                            &&&&  6  6 &&&&                         "
echo "                           &&&&         &&&&                        "
echo "                           &&&&\  \__/ /&&&&                        "
echo "                                \_____/                             "
echo "            _____________OOOO_____|_|___________________________    "
echo "           /                                                    \   "
echo "           |             WELCOME TO OUR TOOL                    |   "
echo "           | MARACAS (MicroAlgae RnA-seq and Chip-seq AnalysiS) |   "
echo "           |     This is the RNA-seq Data Analysis Pipeline     |   "
echo "           |    Specifically Design to Support the Microalgae   |   "
echo "           |      Resarch Community to Exploit Omics Data       |   "
echo "           |                                                    |   "
echo "           |        Ubuntu means I am because we are            |   "
echo "           |           Nelson Mandela (1918 - 2013)             |   "
echo "           \_______________________________OOOO_________________/   "
echo "                              /    |    \                           "
echo "                              |    |    |                           "
echo "                              /    |    \                           "
echo "                             /     |     \                          "
echo "                             |_____|_____|                          "
echo "                                /  X  \                             "
echo "                               (__/ \__)                            "
echo ""
echo ""

#sleep 10s

if [ $# -ne 1 ];
then
   echo "Error: Wrong number of parameters."
   echo ""
   echo ""
   echo "Usage: rnaseq_pipeline <param_file>"
   echo ""
   echo "param_file: A file specifying the parameters for the RNA-seq "
   echo "            Data Analysis Pipeline. The folder test contains "
   echo "            several examples such as ?????. Check "
   echo "            the README file for details on how to write the "
   echo "            paramater file."

   exit
fi


echo ""
echo "------------------------------------------------------"
echo "------------------------------------------------------"
echo "|| STEP 1: LOADING PARAMETERS FROM FILE " $PARAMS "   "
echo "------------------------------------------------------"
echo "------------------------------------------------------" 
echo ""

## Load installation directory
##INS_DIR=$(grep installation_directory: $PARAMS | awk '{ print $2 }')

## Load working directory
eval WD=$(grep working_directory: $PARAMS | awk '{ print $2 }')

## Load main folder
MAIN_FOLDER=$(grep main_folder: $PARAMS | awk '{ print $2 }')

## Load number of samples
NUM_SAMPLES=$(grep loc_sample $PARAMS | wc -l)

## Load microalgae
MICROALGAE=$(grep microalgae: $PARAMS | awk '{ print $2 }')

## Load DE analysis package option
DEANALYSIS=$(grep DEanalysis_package: $PARAMS | awk '{ print $2 }')

if [ -z $DEANALYSIS ] 
then
    	DEANALYSIS="DESeq2"
	echo "No DE analysis parameter specified. DESeq2 will be used"
fi

if [ "$DEANALYSIS" != "limma" ] && [ "$DEANALYSIS" != "DESeq2" ]
then
 	echo ""
	echo "------------------------------------------------------------"
	echo "DE analysis package not supported by MARACAS. Please use"
	echo "DESeq2 or limma instead."
	echo "------------------------------------------------------------"
	echo ""
fi

## Load read mapper
MAPPER=$(grep read_mapper: $PARAMS | awk '{ print $2 }')

if [ -z $MAPPER ] 
then
    	MAPPER="hisat2"
        echo "No mapper specified. hisat2 will be used"
fi

if [ "$MAPPER" != "kallisto" ] && [ "$MAPPER" != "hisat2" ] && [ "$MAPPER" != "STAR" ]
then
 	echo ""
	echo "---------------------------------------------------"
	echo "Read mapper not supported by MARACAS. Please use"
	echo "hisat2, STAR or kallisto instead."
	echo "---------------------------------------------------"
	echo ""
fi
## Load data source
DATA=$(grep data_source: $PARAMS | awk '{print $2}')

## Load paired end data
PAIRED=$(grep paired_end: $PARAMS | awk '{print $2}')

## Load accession numbers for each sample o file location depending on data source
if [ $DATA == "DB" ]
then
	ACC_SAMPLES=()
	for i in `seq 0 $((${NUM_SAMPLES} - 1))`
	do
   	ACC_SAMPLES[$i]=$(grep acc_sample$(($i +1)): $PARAMS | awk '{ print $2 }')
	done
elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
then
	LOC_SAMPLES=()
	for i in `seq 0 $((${NUM_SAMPLES} - 1))`
	do
   	eval LOC_SAMPLES[$i]=$(grep loc_sample$(($i +1)): $PARAMS | awk '{ print $2 }')
		ACC_SAMPLES[$i]=sample$(($i+1))
	done
elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
then
	LOC_SAMPLES_LEFT=()
	LOC_SAMPLES_RIGHT=()
	for i in `seq 0 $((${NUM_SAMPLES} - 1))`
	do
   	LOC_SAMPLES_LEFT[$i]=$(grep loc_sample_left$(($i +1)): $PARAMS | awk '{ print $2 }')
   	LOC_SAMPLES_RIGHT[$i]=$(grep loc_sample_right$(($i +1)): $PARAMS | awk '{ print $2 }')
		ACC_SAMPLES[$i]=sample$(($i+1))
	done
fi

## Load number of comparisons
NUM_COMPS=$(grep factor_name $PARAMS | wc -l)


## Load conditions names
for i in `seq 0 $((${NUM_COMPS} - 1))`
do
  CONDITIONS[$i]=$(grep factor_name$(($i + 1)): $PARAMS | awk '{ print $2 }')
  CONTROL_CONDS[$i]=$(grep control_condition_name$(($i + 1)): $PARAMS | awk '{ print $2 }')
  EXPERIMENTAL_CONDS[$i]=$(grep experimental_condition_name$(($i + 1)): $PARAMS | awk '{ print $2 }')
done

## Load parameters for differential analysis
FOLD_CHANGE=$(grep fold_change: $PARAMS | awk '{ print $2 }')
Q_VALUE=$(grep q_value: $PARAMS | awk '{ print $2 }')

## Load parameter to indicate if the pipeline is going to be run on a cluster or single computer
ARCH=$(grep cluster: $PARAMS | awk '{ print $2}')

## Load parameter with the number of processors
NPROC=$(grep number_processors: $PARAMS | awk '{ print $2}')

echo ""
echo "---------------------------------------------------"
echo "The following parameters were loaded."

echo " - Working directory: " $WD
echo " - Main folder: " $MAIN_FOLDER
echo " - Microalgae: " $MICROALGAE
echo " - DE analysis package: " $DEANALYSIS
echo " - Read Mapper: " $MAPPER
echo " - Architecture where script will be run: " $ARCH
echo " - Number of processors: " $NPROC
echo " - Paired data: " $PAIRED

if [ $DATA == "DB" ]
then
	echo " - Sample accession numbers: " ${ACC_SAMPLES[@]}
elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
then
   echo " - Sample locations:"
   for i in `seq 0 $(($NUM_SAMPLES - 1))`
   do
	echo "   "${ACC_SAMPLES[$i]}: ${LOC_SAMPLES[$i]}
   done
elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
then
	echo " - Sample locations: " ${LOC_SAMPLES_LEFT[@]}
	echo ${LOC_SAMPLES_RIGHT[@]}
fi

echo " - Number of factors: " $NUM_COMPS
echo " - Factor names: " ${CONDITIONS[@]}
echo " - Control conditions names: " ${CONTROL_CONDS[@]}
echo " - Experimental conditions names: " ${EXPERIMENTAL_CONDS[@]} 
echo "---------------------------------------------------"
echo ""


## Generating working directory.

echo ""
echo "------------------------------------------------------------"
echo "------------------------------------------------------------"
echo "|| STEP 2: GENERATION OF THE WORKING DIRECTORY ESTRUCTURE ||"
echo "------------------------------------------------------------"
echo "------------------------------------------------------------"
echo ""

## Access working directory
cd $WD
echo "Accessing working directory"

## Create and access main folder
mkdir ${MAIN_FOLDER}
cd ${MAIN_FOLDER}
echo "Creating and accessing main folder"

## Create subfolders
mkdir samples results logs
echo "Creating subfolders"

## Create folder for each sample
cd samples

for i in `seq 1 ${NUM_SAMPLES}`
do
   mkdir sample_$i
done

## Create experimental design file
echo "Creating experimental design file"
cd $WD/${MAIN_FOLDER}/samples

CONDS2=()
for i in `seq 0 $((${NUM_COMPS} - 1))`
do
   CONDS2[$i]=${CONDITIONS[$i]}
done

echo "sample" ${CONDS2[@]} > experimental_design_naive.csv

for i in `seq 0 $((${NUM_SAMPLES} - 1))`
do
   EXPERIMENTAL_DESIGN=()
   for j in `seq 1 ${NUM_COMPS}`
   do
      EXPERIMENTAL_DESIGN[$(($j -1))]=$(grep factor${j}_sample$(($i + 1)): $FIRST_FOLDER/$PARAMS | awk '{ print $2 }')
   done
   echo "sample"_$(($i + 1)) ${EXPERIMENTAL_DESIGN[@]} >> experimental_design_naive.csv
done

cat experimental_design_naive.csv | sed -e 's/ /,/g'  > experimental_design.csv

rm experimental_design_naive.csv

echo "Working Directory Structure Generated!"
echo " "

if [ $ARCH == "SLURM" ]
then

   echo ""
   echo "----------------------------------------------------"
   echo "----------------------------------------------------"
   echo "|| STEP 3: PARALLEL SAMPLE PROCESSING USING SLURM ||"
   echo "----------------------------------------------------"
   echo "----------------------------------------------------"
   echo ""

   for  i in `seq 0 $((${NUM_SAMPLES} - 1))`
   do
      echo ""
      echo "*************************"
      echo "* Processing Sample " $(($i + 1)) 
      echo "*************************"
      echo ""

      cd $WD/${MAIN_FOLDER}/samples/sample_$(($i + 1))

      if [ $DATA == "DB" ] 
      then
         sbatch $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                          $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                          $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                          $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                          ${NUM_SAMPLES} \
                          $WD/${MAIN_FOLDER} \
                          ${CONTROL_COND} \
                          ${EXPERIMENTAL_COND} \
                          ${FOLD_CHANGE} \
                          ${Q_VALUE} \
                          ${ACC_SAMPLES[$i]} \
                          NULL \
                          $NPROC \
                          $ARCH \
                          $MICROALGAE \
                          $MAPPER
         #sleep 10m
      elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ] 
      then
         sbatch $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                          $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                          $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                          $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                          ${NUM_SAMPLES} \
                          $WD/${MAIN_FOLDER} \
                          ${CONTROL_COND} \
                          ${EXPERIMENTAL_COND} \
                          ${FOLD_CHANGE} \
                          ${Q_VALUE} \
                          ${LOC_SAMPLES[$i]} \
                          NULL \
                          $NPROC \
                          $ARCH \
                          $MICROALGAE \
                          $MAPPER
      elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
      then
         sbatch $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                          $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                          $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                          $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                          ${NUM_SAMPLES} \
                          $WD/${MAIN_FOLDER} \
                          ${CONTROL_COND} \
                          ${EXPERIMENTAL_COND} \
                          ${FOLD_CHANGE} \
                          ${Q_VALUE} \
                          ${LOC_SAMPLES_LEFT[$i]} \
                          ${LOC_SAMPLES_RIGHT[$i]} \
                          $NPROC \
                          $ARCH \
                          $MICROALGAE \
                          $MAPPER
      fi
   done

elif [ $ARCH == "SGE" ]
then

   ## Parallel sample processing
   echo "Parallel sample processing"
   for  i in `seq 0 $((${NUM_SAMPLES} - 1))`
      do
         if [ $DATA == "DB" ]
         then
            qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} $MARACAS/scripts/sample_processing.sge $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${ACC_SAMPLES[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
	    sleep 30m
         elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
         then
            qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} $MARACAS/scripts/sample_processing.sge $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
         then
            qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES_LEFT[$i]} \
                                             ${LOC_SAMPLES_RIGHT[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
	    sleep 30m
         fi

         echo "- Sample " $(($i + 1)) " processing submitted to queue"
   done

elif [ $ARCH == "SERVER" ]
then

   ## Sequential sample processing
   echo ""
   echo "------------------------------------------"
   echo "------------------------------------------"
   echo "|| STEP 3: SEQUENTIAL SAMPLE PROCESSING ||"
   echo "------------------------------------------"
   echo "------------------------------------------"
   echo ""

   for  i in `seq 0 $((${NUM_SAMPLES} - 1))`
      do

         echo ""
         echo "*************************"
         echo "* PROCESSING SAMPLE " $(($i + 1))
         echo "*************************"
         echo ""

         if [ $DATA == "DB" ]
         then
            bash $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${ACC_SAMPLES[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
         then
            bash $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_CONDS} \
                                             ${EXPERIMENTAL_CONDS} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES[$i]} \
                                             NULL \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
         then
            bash $MARACAS/scripts/sample_processing.sh $DATA $PAIRED \
                                             $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                             $MARACAS/data/${MICROALGAE}/genome/${MAPPER}_index_${MICROALGAE} \
                                             $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                             ${NUM_SAMPLES} \
                                             $WD/${MAIN_FOLDER} \
                                             ${CONTROL_COND} \
                                             ${EXPERIMENTAL_COND} \
                                             ${FOLD_CHANGE} \
                                             ${Q_VALUE} \
                                             ${LOC_SAMPLES_LEFT[$i]} \
                                             ${LOC_SAMPLES_RIGHT[$i]} \
                                             $NPROC \
                                             $ARCH \
                                             $MICROALGAE \
                                             $MAPPER
         fi
   done


   if [ $MAPPER == "hisat2" -o  $MAPPER == "STAR" ]
   then
	 echo "Merging transcriptome"
         bash $MARACAS/scripts/transcriptome_merging.sh $WD/${MAIN_FOLDER} $MARACAS/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf
   fi

   echo ""
   echo "* Computing differential gene expression *"
   echo "******************************************"
   echo ""
   for i in `seq 0 $(($NUM_COMPS - 1))`
   do
        echo ${CONDITIONS[$i]}
	echo ${CONTROL_CONDS[$i]}
	echo ${EXPERIMENTAL_CONDS[$i]}
	mkdir $WD/${MAIN_FOLDER}/results/DEGs_by_${CONDITIONS[$i]}
        Rscript $MARACAS/scripts/DE_analysis.R $WD/${MAIN_FOLDER}/samples ${CONTROL_CONDS[$i]} ${EXPERIMENTAL_CONDS[$i]} $FOLD_CHANGE $Q_VALUE $MICROALGAE $MAPPER $DEANALYSIS ${CONDITIONS[$i]}
   done
   echo ""
   echo "* Generating output reports *"
   echo "*****************************"
   echo ""
   for i in `seq 0 $(($NUM_COMPS - 1))`
   do
	Rscript -e "rmarkdown::render('$WD/${MAIN_FOLDER}/results/DEGs_by_${CONDITIONS[$i]}/DE_report.Rmd', 'pdf_document')"
	Rscript -e "rmarkdown::render('$WD/${MAIN_FOLDER}/results/DEGs_by_${CONDITIONS[$i]}/DE_report.Rmd', 'html_document')"
   done
fi

echo ""
echo ""
echo "**************************************************************************************************************"
echo "*                                    ANALYSIS DONE!!!                                                        *"
echo "* OUTPUT REPORTS IN HTML AND PDF FORMATS HAVE BEEN GENERATED IN THE FOLDER $WD/${MAIN_FOLDER}/results"
echo "*                                  ENJOY YOUR RESULTS!!!                                                     *"
echo "**************************************************************************************************************"
echo ""
echo ""
echo ""
echo "                                    ░░░░░░░░░░░░░░░░░░░░░░█████████"
echo "                                    ░░███████░░░░░░░░░░███▒▒▒▒▒▒▒▒███"
echo "                                    ░░█▒▒▒▒▒▒█░░░░░░░███▒▒▒▒▒▒▒▒▒▒▒▒▒███"
echo "                                    ░░░█▒▒▒▒▒▒█░░░░██▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░░░░█▒▒▒▒▒█░░░██▒▒▒▒▒██▒▒▒▒▒▒██▒▒▒▒▒███"
echo "                                    ░░░░░█▒▒▒█░░░█▒▒▒▒▒▒████▒▒▒▒████▒▒▒▒▒▒██"
echo "                                    ░░░█████████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░░░█▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░██▒▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒██▒▒▒▒▒▒▒▒▒▒██▒▒▒▒██"
echo "                                    ██▒▒▒███████████▒▒▒▒▒██▒▒▒▒▒▒▒▒██▒▒▒▒▒██"
echo "                                    █▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒████████▒▒▒▒▒▒▒██"
echo "                                    ██▒▒▒▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░█▒▒▒███████████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒██"
echo "                                    ░██▒▒▒▒▒▒▒▒▒▒████▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒▒█"
echo "                                    ░░████████████░░░█████████████████"
echo ""
echo ""
echo ""
