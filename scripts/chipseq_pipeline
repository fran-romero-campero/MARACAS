#! /bin/bash

## Authors: Francisco J. Romero-Campero
##          Ana Belen Romero-Losada
## Contact: Francisco J. Romero-Campero - fran@us.es

## Load parameters from file

## Input file name
PARAMS=$1

echo "Loading parameters from file " $PARAMS " ... "

## Load installation directory
INS_DIR=$(grep installation_directory: $PARAMS | awk '{ print $2 }')

## Load data source
DATA=$(grep data_source: $PARAMS | awk '{print $2}')

## Load working directory
WD=$(grep working_directory: $PARAMS | awk '{ print $2 }')

## Load main folder
MAIN_FOLDER=$(grep main_folder: $PARAMS | awk '{ print $2 }')

## Load number of replicates
NUM_REPLICATES=$(grep number_of_replicates: $PARAMS | awk '{ print $2 }')

## Load sample name 
SAMPLE_NAME=$(grep sample_name: $PARAMS | awk '{ print $2 }')

## Load microalgae
MICROALGAE=$(grep microalgae: $PARAMS | awk '{ print $2 }')

## Load control is part of the design
INCLUDED_CONTROL=$(grep included_control: $PARAMS | awk '{ print $2 }')

## Load paired end data
PAIRED=$(grep paired_end: $PARAMS | awk '{print $2}')

## Load accession numbers for each sample o file location depending on data source
if [ $DATA == "DB" ]
then

   CHIP_SAMPLES=()
   for i in `seq 0 $((${NUM_REPLICATES} - 1))`
   do
      CHIP_SAMPLES[$i]=$(grep chip_replicate_$(($i +1)): $PARAMS | awk '{ print $2 }')
   done

   if [ ${INCLUDED_CONTROL} == "yes" ]
   then
      CONTROL_SAMPLES=()
      for i in `seq 0 $((${NUM_REPLICATES} - 1))`
      do
         CONTROL_SAMPLES[$i]=$(grep control_replicate_$(($i +1)): $PARAMS | awk '{ print $2 }')
      done
   fi

elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
then
   LOC_CHIP_SAMPLES=()
   for i in `seq 0 $((${NUM_REPLICATES} - 1))`
   do
      LOC_CHIP_SAMPLES[$i]=$(grep loc_chip_replicate_$(($i +1)): $PARAMS | awk '{ print $2 }')
      ACC_SAMPLES[$i]=sample$(($i+1))
   done
   
   if [ ${INCLUDED_CONTROL} == "yes" ]
   then
      LOC_CONTROL_SAMPLES=()
      for i in `seq 0 $((${NUM_REPLICATES} - 1))`
      do
         LOC_CONTROL_SAMPLES[$i]=$(grep loc_control_replicate_$(($i +1)): $PARAMS | awk '{ print $2 }')
      done
   fi

elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
then
   LOC_CHIP_SAMPLES_LEFT=()
   LOC_CHIP_SAMPLES_RIGHT=()
   for i in `seq 0 $((${NUM_REPLICATES} - 1))`
   do
      LOC_CHIP_SAMPLES_LEFT[$i]=$(grep loc_chip_replicate_left$(($i +1)): $PARAMS | awk '{ print $2 }')
      LOC_CHIP_SAMPLES_RIGHT[$i]=$(grep loc_chip_replicate_right$(($i +1)): $PARAMS | awk '{ print $2 }')
      ACC_SAMPLES[$i]=sample$(($i+1))
   done

   if [ ${INCLUDED_CONTROL} == "yes" ]
   then
      LOC_CONTROL_SAMPLES_LEFT=()
      LOC_CONTROL_SAMPLES_RIGHT=()
      for i in `seq 0 $((${NUM_REPLICATES} - 1))`
      do
         LOC_CONTROL_SAMPLES_LEFT[$i]=$(grep loc_control_replicate_left_$(($i +1)): $PARAMS | awk '{ print $2 }')
         LOC_CONTROL_SAMPLES_RIGHT[$i]=$(grep loc_control_replicate_right_$(($i +1)): $PARAMS | awk '{ print $2 }')
      done
   fi

fi

## Load parameter to indicate if the pipeline is going to be run on a cluster >
ARCH=$(grep cluster: $PARAMS | awk '{ print $2}')

## Load parameter with the number of processors
NPROC=$(grep number_processors: $PARAMS | awk '{ print $2}')

echo "The following parameters were loaded."
echo " - Installation directory: " $INS_DIR
echo " - Working directory: " $WD
echo " - Main folder: " $MAIN_FOLDER
echo " - Number of replicates: " $NUM_REPLICATES
echo " - Sample name: " ${SAMPLE_NAME}
echo " - Microalgae: " $MICROALGAE

if [ $DATA == "DB" ]
then
        echo " - Sample accession numbers: " ${CHIP_SAMPLES[@]} ${CONTROL_SAMPLES[@]}
else
        echo " - Sample locations: " ${LOC_SAMPLES[@]}
fi

echo " "


## Generate working directory structure

#echo ""
#echo "-------------------------------------------------------------------"
#echo "Generating working directory structure"

## Access working directory
cd $WD

## Create and access main folder
mkdir ${MAIN_FOLDER}
cd ${MAIN_FOLDER}

## Create subfolders
mkdir replicates results logs

## Create folder for each sample
cd replicates

for i in `seq 1 ${NUM_REPLICATES}`
do
   mkdir replicate_$i
done
echo "Working directory generated"
echo " "

## Parallel sample processing
if [ $ARCH == "SGE" ]
then
   echo "Parallel replicate processing"
   for  i in `seq 0 $((${NUM_REPLICATES} - 1))`
   do
      if [ $DATA == "DB" ] && [ ${INCLUDED_CONTROL} == "yes" ]
      then
         if [ $PAIRED == "FALSE" ]
         then
         qsub -o $WD/${MAIN_FOLDER}/logs/${CHIP_SAMPLES[$i]} ${INS_DIR}/scripts/chipseq_replicate_processing.sh $DATA $PAIRED \
                                         $WD/${MAIN_FOLDER}/replicates/replicate_$(($i +1)) \
                                         ${INS_DIR}/data/${MICROALGAE}/genome/bowtie2_index_${MICROALGAE} \
                                         ${NUM_REPLICATES} \
                                         ${INS_DIR} \
                                         ${INCLUDED_CONTROL} \
                                         ${CHIP_SAMPLES[$i]} \
                                         NULL \
                                         ${CONTROL_SAMPLES[$i]} \
                                         NULL \
                                         $(($i +1))
#         else
         fi
      elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
      then
         qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} ${INS_DIR}/scripts/sample_processing.sh $DATA $PAIRED \
                                         $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                         ${INS_DIR}/data/${MICROALGAE}/genome/hisat2_index_${MICROALGAE} \
                                         ${INS_DIR}/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                         ${NUM_SAMPLES} \
                                         ${INS_DIR} \
                                         $WD/${MAIN_FOLDER} \
                                         ${CONTROL_COND} \
                                         ${EXPERIMENTAL_COND} \
                                         ${FOLD_CHANGE} \
                                         ${Q_VALUE} \
                                         ${LOC_SAMPLES[$i]}
      elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
      then
                qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} ${INS_DIR}/scripts/sample_processing.sh $DATA $PAIRED \
                                                $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                                ${INS_DIR}/data/${MICROALGAE}/genome/hisat2_index_${MICROALGAE} \
                                                ${INS_DIR}/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                                ${NUM_SAMPLES} \
                                                ${INS_DIR} \
                                                $WD/${MAIN_FOLDER} \
                                                ${CONTROL_COND} \
                                                ${EXPERIMENTAL_COND} \
                                                ${FOLD_CHANGE} \
                                                ${Q_VALUE} \
                                                ${LOC_SAMPLES_LEFT[$i]} \
                                                ${LOC_SAMPLES_RIGHT[$i]}
#          qsub -o $WD/${MAIN_FOLDER}/logs/${ACC_SAMPLES[$i]} ${INS_DIR}/scripts/sample_processing.sh $DATA $PAIRED $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) ${LOC_SAMPLES[$i]} ${INS_DIR}/data/${MICROALGAE}/genome/hisat2_index_${MICROALGAE} ${INS_DIR}/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf ${NUM_SAMPLES} ${INS_DIR} $WD/${MAIN_FOLDER} ${CONTROL_COND} ${EXPERIMENTAL_COND} ${FOLD_CHANGE} ${Q_VALUE} $DATA
      fi

      echo "- Replicate " $(($i + 1)) " processing submitted to queue"
      sleep 30m
   done

elif [ $ARCH == "SERVER" ]
then

   echo "Sequential replicate processing"
   echo ""

   for  i in `seq 0 $((${NUM_REPLICATES} - 1))`
   do
      echo "- Replicate " $(($i + 1)) " processing"
      if [ $DATA == "DB" ] && [ ${INCLUDED_CONTROL} == "yes" ]
      then
         if [ $PAIRED == "FALSE" ]
         then
         bash ${INS_DIR}/scripts/chipseq_replicate_processing.sh $DATA $PAIRED \
                                         $WD/${MAIN_FOLDER}/replicates/replicate_$(($i +1)) \
                                         ${INS_DIR}/data/${MICROALGAE}/genome/bowtie2_index_${MICROALGAE} \
                                         ${NUM_REPLICATES} \
                                         ${INS_DIR} \
                                         ${INCLUDED_CONTROL} \
                                         ${CHIP_SAMPLES[$i]} \
                                         NULL \
                                         ${CONTROL_SAMPLES[$i]} \
                                         NULL \
                                         $(($i +1))
         fi
     elif [ $DATA == "FILES" ] && [ $PAIRED == "FALSE" ]
     then
         bash ${INS_DIR}/scripts/chipseq_replicate_processing.sh $DATA $PAIRED \
                                         $WD/${MAIN_FOLDER}/replicates/replicate_$(($i +1)) \
                                         ${INS_DIR}/data/${MICROALGAE}/genome/bowtie2_index_${MICROALGAE} \
                                         ${NUM_REPLICATES} \
                                         ${INS_DIR} \
                                         ${INCLUDED_CONTROL} \
                                         ${LOC_CHIP_SAMPLES[$i]} \
                                         NULL \
                                         ${LOC_CONTROL_SAMPLES[$i]} \
                                         NULL \
                                         $(($i +1))
      elif [ $DATA == "FILES" ] && [ $PAIRED == "TRUE" ]
      then
          bash ${INS_DIR}/scripts/sample_processing.sh $DATA $PAIRED \
                                         $WD/${MAIN_FOLDER}/samples/sample_$(($i +1)) \
                                         ${INS_DIR}/data/${MICROALGAE}/genome/hisat2_index_${MICROALGAE} \
                                         ${INS_DIR}/data/${MICROALGAE}/annotation/${MICROALGAE}.gtf \
                                         ${NUM_SAMPLES} \
                                         ${INS_DIR} \
                                         $WD/${MAIN_FOLDER} \
                                         ${CONTROL_COND} \
                                         ${EXPERIMENTAL_COND} \
                                         ${FOLD_CHANGE} \
                                         ${Q_VALUE} \
                                         ${LOC_SAMPLES_LEFT[$i]} \
                                         ${LOC_SAMPLES_RIGHT[$i]}
      fi

      echo "- Replicate " $(($i + 1)) " processed"
   done
fi

echo "Samples processing finished"
echo ""
echo "Final output generation"

if [ ${NUM_REPLICATES} -gt 1 ]
then
   pwd
   cd ../results
   pwd
   cp ../replicates/replicate_1/replicate_1_peaks.narrowPeak acum_peaks.narrowPeak
   for  i in `seq 2 ${NUM_REPLICATES}`
   do
      intersectBed -a acum_peaks.narrowPeak -b ../replicates/replicate_$i/replicate_${i}_peaks.narrowPeak > acum_peaks_2.narrowPeak
      rm acum_peaks.narrowPeak
      mv acum_peaks_2.narrowPeak acum_peaks.narrowPeak
   done
   mv acum_peaks.narrowPeak output_peaks.narrowPeak
else
   cp replicate_${CURRENT_REPLICATE}_peaks.narrowPeak ../../results/output_peaks.narrowPeak
fi

echo "Here Rscript to be launched"




